<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JavaScript on @ntalbs&#39; stuff</title>
    <link>http://ntalbs.github.io/tags/javascript/</link>
    <description>Recent content in JavaScript on @ntalbs&#39; stuff</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Tue, 28 Jul 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://ntalbs.github.io/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>에디터 입력기 만들기</title>
      <link>http://ntalbs.github.io/2015/editor-ime/</link>
      <pubDate>Tue, 28 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>http://ntalbs.github.io/2015/editor-ime/</guid>
      <description>&lt;p&gt;&lt;code&gt;contenteditable&lt;/code&gt;을 사용하지 않고 에디터를 개발하기로 했다면 브라우저에서 키 입력 이벤트를 받아 처리할 IME(Input Method Editor)를 만들어야 한다. 텍스트 필드나 &lt;code&gt;div&lt;/code&gt;에 텍스트를 입력할 수 있게 한 다음 여기서 키 이벤트를 받아 처리하는 방식으로 구현한다. &lt;code&gt;div&lt;/code&gt;에 텍스트를 입력하려면 &lt;code&gt;contenteditable&lt;/code&gt;을 써야 하지만, 에디터 창에 &lt;code&gt;contenteditable&lt;/code&gt;을 써서 편집하는 것과는 다르다. 개발할 때는 입력을 제대로 처리하는 지 확인하기 쉽게 IME를 표시하기도 하지만, 나중에는 IME를 보이지 않게 처리해 에디터 화면에 텍스트가 직접 입력되는 것처럼 보이게 한다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>블로그에 Progress Bar 추가하기</title>
      <link>http://ntalbs.github.io/2015/progress-bar/</link>
      <pubDate>Thu, 02 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>http://ntalbs.github.io/2015/progress-bar/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://blog.weirdx.io&#34;&gt;이상한 모임&lt;/a&gt; 사이트에서 글을 읽을 때 상단에 프로그레스 바(progress bar)가 표시되는 것을 발견했다. 스크롤해서 글을 읽어감에 따라 글을 얼마나 읽었는지, 얼마나 남았는지를 쉽게 알 수 있어 매우 마음에 들었다. 내 블로그에도 이걸 적용하면 좋겠다는 생각이 들어 툭탁툭탁 만들어 봤다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>JavaScript 코드 안 HTML 문자열</title>
      <link>http://ntalbs.github.io/2014/html-str-in-js/</link>
      <pubDate>Fri, 22 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>http://ntalbs.github.io/2014/html-str-in-js/</guid>
      <description>&lt;p&gt;JavaScript 코드에 HTML 문자열을 써야 하는 경우가 종종 있다. 문자열이 짧을 때는 그냥 한 줄로 써도 크게 상관 없다. 복잡한 계층 구조를 가지는 긴 HTML 문자열을 써야 할 경우에는 한 줄로 작성하지 않는다. 작성하기도 어렵고 알아보기도 어렵기 때문이다. 보통 다음과 같이 여러 줄로 문자열을 만들고 &lt;code&gt;+&lt;/code&gt;로 연결해 변수에 저장한다.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>JavaScript에서 private 필드</title>
      <link>http://ntalbs.github.io/2014/private-in-js/</link>
      <pubDate>Sun, 08 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>http://ntalbs.github.io/2014/private-in-js/</guid>
      <description>&lt;p&gt;JavaScript를 주로 사용하게 되면서 JavaScript에 대한 부정적인 생각이 줄어들었지만, 여전히 마음에 들지 않는 부분이 있다. 그 중 하나가 &lt;code&gt;private&lt;/code&gt; 필드를 만들기가 애매하다는 점이다.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>텍스트 노드 조작 insertData</title>
      <link>http://ntalbs.github.io/2014/insert-data/</link>
      <pubDate>Thu, 17 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>http://ntalbs.github.io/2014/insert-data/</guid>
      <description>텍스트 노드에 텍스트를 삽입할 때 처음에는 텍스트 노드의 textContent를 직접 조작했다. 즉 Range 객체에서 텍스트를 삽입할 위치를 구한 다음 다음과 같이 substr 함수로 텍스트를 직접 조작했다. var rng = caret.getRange(), node = rng.startContainer, offset = rng.startOffset, tc = node.textContent; node.textContent = tc.substr(0, offset) + t + tc.substr(offset); ...  코드가 마음에 들지 않았지만, 다른 방법을 몰라 어쩔 수 없이 이렇게 썼다. 그러다 Range.insertNode()를 알게 되었다. 이 녀석을 사용하면 좀더 쉽게 텍스트를 조작할 수 있다.</description>
    </item>
    
    <item>
      <title>Ways 프로그램</title>
      <link>http://ntalbs.github.io/2012/ways/</link>
      <pubDate>Thu, 02 Feb 2012 00:00:00 +0000</pubDate>
      
      <guid>http://ntalbs.github.io/2012/ways/</guid>
      <description>&lt;p&gt;이건 내가 새로운 프로그래밍 언어를 배울 때마다 만들어 보는 간단한 데모 프로그램이다. 미리 정해진 규칙에 따라 화면에 계속 그림을 그린다.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Canvas 테스트</title>
      <link>http://ntalbs.github.io/2009/canvas-test/</link>
      <pubDate>Mon, 16 Nov 2009 00:00:00 +0000</pubDate>
      
      <guid>http://ntalbs.github.io/2009/canvas-test/</guid>
      <description>&lt;p&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; 태그를 사용해 간단한 그림을 그려봤다. &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; 태그를 이용하면 브라우저에 자유자재로 그림을 그릴 수 있다. Firefox와 같은 Gecko 기반의 브라우저에서는 &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; 요소(element)를 지원하지만 IE에서는 아직 지원하지 않는다. Chrome 브라우저에서도 &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;가 잘 동작한다.

&lt;div style=&#34;margin:auto; width:300px; padding:0;&#34;&gt;
  &lt;canvas id=&#34;canvas&#34; width=&#34;300&#34; height=&#34;300&#34;&gt;&lt;/canvas&gt;
&lt;/div&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>