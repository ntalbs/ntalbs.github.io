<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>테스팅 on @ntalbs&#39; stuff</title>
    <link>http://ntalbs.github.io/tags/%ED%85%8C%EC%8A%A4%ED%8C%85/</link>
    <description>Recent content in 테스팅 on @ntalbs&#39; stuff</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Sat, 04 Jun 2011 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://ntalbs.github.io/tags/%ED%85%8C%EC%8A%A4%ED%8C%85/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>커버리지 분석 시 불필요한 js 파일 제외하기</title>
      <link>http://ntalbs.github.io/2011/jstestdriver-exclude/</link>
      <pubDate>Sat, 04 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>http://ntalbs.github.io/2011/jstestdriver-exclude/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://ntalbs.github.io/2010/hudson-jstestdriver-coverage/&#34;&gt;Hudson에서 JsTestDriver를 이용한 커버리지 분석 설정&lt;/a&gt;에서 JsTestDriver로 작성한 테스트에 대해 커버리지를 어떻게 볼 수 있는지 설명했다. 그런데 이렇게 테스트 커버리지를 분석할 때 문제가 하나 있다. 외부 라이브러리가 커버리지 분석 리포트에 포함되어 커버리지 결과가 왜곡된다는 점이다.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hudson에서 JsTestDriver를 이용한 커버리지 분석 설정</title>
      <link>http://ntalbs.github.io/2010/hudson-jstestdriver-coverage/</link>
      <pubDate>Wed, 24 Nov 2010 00:00:00 +0000</pubDate>
      
      <guid>http://ntalbs.github.io/2010/hudson-jstestdriver-coverage/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://ntalbs.github.io/2010/hudson-jstestdriver/&#34;&gt;Hudson에서 JsTestDriver 설정&lt;/a&gt;에서 Hudson에서 JsTestDriver를 설정하는 방법을 설명했다. 여기서는 Hudson에서 JsTestDriver를 이용해 테스트 커버리지 리포트를 생성하는 방법을 살펴보자.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hudson에서 JsTestDriver 설정</title>
      <link>http://ntalbs.github.io/2010/hudson-jstestdriver/</link>
      <pubDate>Mon, 22 Nov 2010 00:00:00 +0000</pubDate>
      
      <guid>http://ntalbs.github.io/2010/hudson-jstestdriver/</guid>
      <description>&lt;p&gt;JsTestDriver를 사용하면 CI(Continuous Integration) 서버에서 JavaScript 코드에 대한 단위 테스트를 실행하고 코드 커버리지 리포트를 생성할 수 있다.
&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>