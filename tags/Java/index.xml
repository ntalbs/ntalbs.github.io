<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on @ntalbs&#39; stuff</title>
    <link>http://ntalbs.github.io/tags/java/</link>
    <description>Recent content in Java on @ntalbs&#39; stuff</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Thu, 28 Sep 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://ntalbs.github.io/tags/java/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>HttpClient 테스트</title>
      <link>http://ntalbs.github.io/2017/http-client-test/</link>
      <pubDate>Thu, 28 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>http://ntalbs.github.io/2017/http-client-test/</guid>
      <description>&lt;p&gt;Java 9에는 모듈 시스템, 링킹, JShell 등 여러 가지 중요한 기능이 추가됐지만, 새로운 HTTP API에 가장 큰 관심이 갔다. 이 녀석을 활용하면 우리 팀에서 개발하는 서비스 코드를 훨씬 읽기 좋게 바꿀 수 있을 것 같다는 생각이 들었다.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>리팩터링</title>
      <link>http://ntalbs.github.io/2017/refactoring/</link>
      <pubDate>Mon, 01 May 2017 00:00:00 +0000</pubDate>
      
      <guid>http://ntalbs.github.io/2017/refactoring/</guid>
      <description>&lt;p&gt;API Gateway를 수정하는 작업을 하다가 다음 메서드를 보았다. 주어진 문자열에서 괄호 짝이 맞는지 확인하는 함수로 파라미터가 포함된 URI를 검증할 때 사용되고 있었다.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>코딩 시간과 코드 품질</title>
      <link>http://ntalbs.github.io/2017/poor-code/</link>
      <pubDate>Fri, 21 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://ntalbs.github.io/2017/poor-code/</guid>
      <description>&lt;p&gt;시간이 충분하면 좋은 코드를 작성할 수 있지만, 코드 품질 따지느라 개발 기간이 늘어지는 것 보다는 빨리 개발해 서비스를 시작하는 게 중요하다는 주장을 볼 수 있다. 옳은 말이다. 요즘 같이 비즈니스 환경이 급변하는 세상에 속도가 중요한 요소임엔 틀림 없다. 그러나 코딩에 들이는 시간과 코드 품질이 비례한다는 주장에는 동의하지 않는다.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>설득</title>
      <link>http://ntalbs.github.io/2016/persuading/</link>
      <pubDate>Tue, 06 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>http://ntalbs.github.io/2016/persuading/</guid>
      <description>&lt;p&gt;동료와 리팩터링하다 다음과 같은 코드를 만났다.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;private Map&amp;lt;String, Integer&amp;gt; getCountryCodeCountMap(String customerId) {
  List&amp;lt;String&amp;gt; countries = getCountryList(customerId);

  Map&amp;lt;String, Integer&amp;gt; countryCodeMap = new HashMap&amp;lt;&amp;gt;();
  for (String cc : countries) {
    if (StringUtils.isNotBlank(cc)) {
      countryCodeMap.put(cc, countryCodeMap.getOrDefault(cc, 0) + 1);
    }
  }
  return countryCodeMap;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Java에서 배열 합치기</title>
      <link>http://ntalbs.github.io/2016/java-array-merge/</link>
      <pubDate>Sat, 18 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>http://ntalbs.github.io/2016/java-array-merge/</guid>
      <description>&lt;p&gt;옆 자리 동료가 Java에서 배열을 합치는 간단한 방법이 있는지 질문했다. 열 개 정도의 배열을 하나로 합치고 싶다는 것이었다. 당장 떠오른 방법은 &lt;code&gt;System.arraycopy&lt;/code&gt;를 사용하는 것이었지만 이걸 몰라서 물어보지는 않았을 것이다. &lt;code&gt;System.arraycopy&lt;/code&gt;를 사용하면 효율적이긴 하겠지만 코드는 별로 예쁘지 않을 것이다. 혹시 이미 이 기능을 구현한 라이브러리가 있나 확인했지만 찾을 수 없었다.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>if (cond == true) return true</title>
      <link>http://ntalbs.github.io/2015/if-true-return-true/</link>
      <pubDate>Fri, 21 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>http://ntalbs.github.io/2015/if-true-return-true/</guid>
      <description>&lt;p&gt;회사에서 코드 리뷰를 할 때 다음과 같은 패턴의 코드가 자주 눈에 띈다.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;if (condition == true) {
  return true;
} else {
  return false;
}
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Guava Cache 제대로 사용하기</title>
      <link>http://ntalbs.github.io/2015/loading-cache/</link>
      <pubDate>Wed, 10 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>http://ntalbs.github.io/2015/loading-cache/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://code.google.com/p/guava-libraries/wiki/CachesExplained&#34;&gt;Google Guava Cache&lt;/a&gt;는 캐시를 쉽게 사용할 수 있도록 다양한 기능을 제공한다. 간단한 코드로 캐시 크기, 캐시 시간, 데이터 로딩 방법, 데이터 리프레시 방법 등을 제어할 수 있다. 회사에서도 성능 향상을 위해 Guava 캐시가 널리 사용하고 있는데, 최근 캐시 관련 코드를 보다가 이상한 점을 발견했다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>과도한 로깅</title>
      <link>http://ntalbs.github.io/2015/excessive-logging/</link>
      <pubDate>Thu, 07 May 2015 00:00:00 +0000</pubDate>
      
      <guid>http://ntalbs.github.io/2015/excessive-logging/</guid>
      <description>&lt;blockquote class=&#34;blockquote-reverse&#34;&gt;과유불급(過猶不及)
정도를 지나침은 미치지 못함과 같다
- 논어(論語) 선진편(先進篇)&lt;/blockquote&gt;

&lt;p&gt;방문자가 매우 많은 사이트에서 애플리케이션을 배포하는 작업은 부담이 크다. 다행히 애플리케이션 서버를 여러 대 두기 때문에 서버 한 대가 잘못되더라도 사이트 전면 장애가 발생하지는 않는다. 새로운 코드를 배포할 때는 항상 서버 한 대에 먼저 배포해 놓고 일정 시간 동안 모니터링 한다. 문제가 없는 경우에는 전체 서버로 배포하고, 로그에 예외나 에러가 표시되면 즉시 롤백한다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Java REPL</title>
      <link>http://ntalbs.github.io/2015/java-repl/</link>
      <pubDate>Mon, 02 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>http://ntalbs.github.io/2015/java-repl/</guid>
      <description>&lt;p&gt;코드를 작성하다 보면 작은 코드 조각을 간단히 테스트해보고 싶을 때가 자주 생긴다. 간단한 계산이 필요할 수도 있고 특정 함수를 호출했을 때의 결과를 확인하고 싶을 수도 있다. 코드가 어떻게 동작하는지 간단히 확인해보고 싶을 수도 있다. REPL이 있다면 이런 궁금한 점을 즉시 확인할 수 있다. 그냥 REPL에서 코드를 입력하고 결과를 확인하면 된다. Clojure나 Scala는 REPL을 제공한다. Ruby나 Python 같은 언어도 REPL을 제공한다. JavaScript도 브라우저 콘솔이나 node.js를 REPL로 사용할 수 있다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MacOS X에서 JDK 버전 전환</title>
      <link>http://ntalbs.github.io/2014/multiple-jdk-on-macosx/</link>
      <pubDate>Tue, 16 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>http://ntalbs.github.io/2014/multiple-jdk-on-macosx/</guid>
      <description>&lt;p&gt;보통 JDK 최신 버전을 설치해 사용한다. 운영환경에 여전히 JDK7을 쓰고 있지만 개발환경에서는 JDK8을 쓰되 &lt;code&gt;-target 1.7&lt;/code&gt; 옵션을 주어 컴파일하면 문제가 없지 않을까 생각했다. 그런데 서버를 올릴때 계속 에러가 발생해 인터넷에서 찾아보니 Spring 3.2.8 버그란다. 이 문제는 Spring 3.2.9에서 해결되었다고 하지만 운영환경은 여전히 Spring 3.2.8을 사용하고 있고, 내가 Spring 버전을 올릴 권한도 없다. 어쩔 수 없이 노트북에 JDK7을 설치할 수밖에 없다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jps 사용법</title>
      <link>http://ntalbs.github.io/2014/jps/</link>
      <pubDate>Tue, 05 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>http://ntalbs.github.io/2014/jps/</guid>
      <description>자바로 개발할 때 보통 java와 javac만 사용하지만, JDK에는 이 이외에도 많은 도구가 포함되어 있다. 그 중 하나인 jps를 살펴보자. jps는 JVM 프로세스 상태를 보는 도구로 UNIX의 ps와 비슷하다. ps는 운영체계의 모든 프로세스 상태를 보여주지만 jps는 JVM 프로세스만 보여준다는 차이가 있다. jps 실행 시 목표 시스템(target system)을 지정하면 원격 시스템의 JVM 프로세스 상태도 확인할 수 있다.
사용법 $ jps [options] [hostid]  옵션  -q 클래스 이름, JAR 파일 이름, main 메서드에 전달된 인자를 모두 생략하고 JVM 아이디(보통 OS 프로세스 아이디와 동일.</description>
    </item>
    
    <item>
      <title>Project Lombok</title>
      <link>http://ntalbs.github.io/2014/lombok/</link>
      <pubDate>Thu, 08 May 2014 00:00:00 +0000</pubDate>
      
      <guid>http://ntalbs.github.io/2014/lombok/</guid>
      <description>&lt;p&gt;Java로 프로그램을 작성할 때 &lt;a href=&#34;http://projectlombok.org/&#34;&gt;Lombok&lt;/a&gt;을 이용하면 보일러플레이트 코드를 줄여 코드를 깔끔하게 유지할 수 있다. 사용하기도 편하고 IDE와도 잘 통합되기 때문에(안타깝게 IntelliJ와는 궁합이 안 맞는듯 하다. 하지만 난 Eclipse를 사용하니까&amp;hellip;) 널리 사용될 줄 알았는데 의외로 모르는 개발자가 많은 것 같다.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>지역 변수에 final을 붙여야 하나</title>
      <link>http://ntalbs.github.io/2011/final-local-var/</link>
      <pubDate>Tue, 23 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>http://ntalbs.github.io/2011/final-local-var/</guid>
      <description>&lt;p&gt;회사에서 작성하는 모든 소스 코드에 대해 Quality Practice(이하 QP)를 적용하려 하고 있다. Java 코드에 대해서는 &lt;a href=&#34;http://findbugs.sourceforge.net/&#34;&gt;Findbugs&lt;/a&gt;, &lt;a href=&#34;http://pmd.sourceforge.net/&#34;&gt;PMD&lt;/a&gt;, &lt;a href=&#34;http://checkstyle.sourceforge.net/&#34;&gt;Checkstyle&lt;/a&gt;과 같은 도구를 사용해 소스 코드를 분석한다. 물론 각 도구를 적용할 때의 규칙(rule)은 QP 담당자였던 내 주관적 판단(또는 취향)에 따라 조정한다. &lt;span style=&#34;color:lightgray&#34;&gt;(지금은 QP 담당자가 다른 사람으로 바뀌었지만, 각 규칙을 조정할 정도로 관심을 가지지는 않는 듯 하다.)&lt;/span&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>NoSuchMethodError</title>
      <link>http://ntalbs.github.io/2011/no-such-method-error/</link>
      <pubDate>Fri, 12 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>http://ntalbs.github.io/2011/no-such-method-error/</guid>
      <description>&lt;p&gt;CI서버에서 대략 삼분의 일 정도의 테스트가 실패하고 있었다. 로그를 확인해보니 어이없게도 실패하는 테스트에서 &lt;code&gt;NoSuchMethodError&lt;/code&gt;가 발생했고, 모두 Google의 컬렉션 라이브러리를 사용하는 부분이었다. 이클립스에서 테스트를 실행시킬 때는 아무런 문제가 없는데 CI 서버에서는 실패하는 것이었다.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Integer.MIN_VALUE</title>
      <link>http://ntalbs.github.io/2011/int-min-value/</link>
      <pubDate>Wed, 23 Feb 2011 00:00:00 +0000</pubDate>
      
      <guid>http://ntalbs.github.io/2011/int-min-value/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://ntalbs.github.io/images/2011/int-min-value/2011-02-23-1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.amazon.com/Effective-Java-2nd-Joshua-Bloch/dp/0321356683&#34;&gt;Effective Java&lt;/a&gt;로 유명한 &lt;a href=&#34;https://twitter.com/joshbloch&#34;&gt;Joshua Bloch&lt;/a&gt;의 트윗에 재미있는 글이 올라왔다. 엥, 어떤 수에 -1을 곱했는데 자기 자신이 된다고? 곧장 테스트 프로그램을 만들어 돌려봤더니 정말 그렇다.
&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>